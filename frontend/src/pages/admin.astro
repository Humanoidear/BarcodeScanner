---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Admin | Barcode Scanner" />
<main>
  <div
    id="notification"
    class="hidetime top-20 right-3 bg-green-500 text-left text-white p-2 rounded-xl text-center flex flex-row items-center gap-3 hidden z-20 absolute"
  >
    <svg
      class="w-8 h-8"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
    >
      <path
        d="M3 3h16v2H5v14h14v2H3V3zm18 0h-2v18h2V3zM11 15h2v2h-2v-2zm2-8h-2v6h2V7z"
        fill="currentColor"></path>
    </svg>
  </div>
  <div
    id="openSettings"
    class="p-2 rounded-2xl bg-slate-800 hover:bg-slate-700 text-center text-white relative"
  >
    <svg
      class="w-10 h-10 scale-75"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
    >
      <path
        d="M8 3h8v4h6v14H2V7h6V3zm2 4h4V5h-4v2zM4 9v10h16V9H4z"
        fill="currentColor"></path>
    </svg>
  </div>
  <div
    id="openPassword"
    class="p-2 rounded-2xl bg-slate-800 hover:bg-slate-700 text-center text-white relative"
  >
    <svg
      class="w-10 h-10 scale-75"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
    >
      <path
        d="M8 3h8v4h6v14H2V7h6V3zm2 4h4V5h-4v2zM4 9v10h16V9H4z"
        fill="currentColor"></path>
    </svg>
  </div>

  <div
    id="passwordModal"
    class="fadein hidden fixed inset-0 bg-gray-700 bg-opacity-75 flex items-end justify-center"
  >
    <button
      id="closePassword"
      class="top-[25px] right-[15px] w-14 h-14 bg-red-400 text-white rounded-2xl absolute"
      ><svg
        class="scale-75"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
      >
        <path
          d="M5 5h2v2H5V5zm4 4H7V7h2v2zm2 2H9V9h2v2zm2 0h-2v2H9v2H7v2H5v2h2v-2h2v-2h2v-2h2v2h2v2h2v2h2v-2h-2v-2h-2v-2h-2v-2zm2-2v2h-2V9h2zm2-2v2h-2V7h2zm0 0V5h2v2h-2z"
          fill="currentColor"></path>
      </svg></button
    >
    <div
      class="slideup bg-gray-900 rounded-t-3xl p-6 w-full h-full flex flex-col items-center justify-center"
    >
      <div class="max-w-[700px]">
        <p class="mb-3 text-white text-2xl font-semibold">Código en vigor</p>
        <h1
          id="pwd"
          class="w-full p-6 text-6xl text-white text-center font-black rounded-2xl bg-white/5"
        >
        </h1>
        <p class="mt-3 text-white opacity-60">
          Válido desde ahora hasta <span id="expiration"></span>
        </p>
      </div>
    </div>
  </div>
</main>

<div
  id="settingsModal"
  class="fadein hidden fixed inset-0 bg-gray-700 bg-opacity-75 flex items-end justify-center"
>
  <button
    id="closeSettings"
    class="top-[25px] right-[15px] w-14 h-14 bg-red-400 text-white rounded-2xl absolute"
    ><svg
      class="scale-75"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
    >
      <path
        d="M5 5h2v2H5V5zm4 4H7V7h2v2zm2 2H9V9h2v2zm2 0h-2v2H9v2H7v2H5v2h2v-2h2v-2h2v-2h2v2h2v2h2v2h2v-2h-2v-2h-2v-2h-2v-2zm2-2v2h-2V9h2zm2-2v2h-2V7h2zm0 0V5h2v2h-2z"
        fill="currentColor"></path>
    </svg></button
  >
  <div class="slideup bg-gray-900 rounded-t-3xl p-6 w-full">
    <div class="mb-7 text-white flex flex-row items-center gap-3">
      <svg
        class="w-8 h-8"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
      >
        <path
          d="M8 3h8v4h6v14H2V7h6V3zm2 4h4V5h-4v2zM4 9v10h16V9H4z"
          fill="currentColor"></path>
      </svg>
      <h3 class="text-white text-2xl font-bold">Parámetros</h3>
    </div>
    <div class="mb-6">
      <h3 class="mb-3 text-xl text-white font-semibold">
        Generar contraseña de voluntarios
      </h3>
      <div>
        <label
          for="expirationToggle"
          class="mb-1 block text-sm font-medium text-gray-700">Expiración</label
        >
        <select
          id="expirationToggle"
          name="expirationToggle"
          class="block w-full shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
          onchange="toggleExpiration()"
        >
          <option value="today">Hoy a medianoche</option>
          <option value="manual">Elegir fecha manualmente</option>
        </select>
        <div id="datePickerContainer" class="hidden">
          <input
            type="date"
            id="expirationDate"
            name="expirationDate"
            class="block w-full border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm rounded-md"
          />
        </div>
        <form
          id="passwordForm"
          action="http://localhost:3000/canviar-mot-de-pas"
          method="post"
          enctype="application/x-www-form-urlencoded"
        >
          <input type="hidden" id="password" name="password" />
          <input type="hidden" id="expiration" name="expiration" />
          <button
            type="submit"
            type="button"
            class="w-full py-2 bg-blue-600 text-white rounded-t-md rounded-b-2xl flex items-center justify-center gap-3"
            onclick="generatePassword()"
            ><svg
              class="w-6 h-6"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
            >
              <path
                d="M16 3H8v4H2v14h20V7h-6V3zm-2 4h-4V5h4v2zM4 19V9h16v10H4zm10-8h2v2h-2v-2zm-2 4v-2h2v2h-2zm-2 0h2v2h-2v-2zm0 0H8v-2h2v2z"
                fill="currentColor"></path>
            </svg> Generar una nueva contraseña</button
          >
        </form>
      </div>
    </div>

    <h3 class="mb-3 text-xl text-white font-semibold">Añadir centro</h3>
    <form
      action="http://localhost:3000/afegir-centre"
      method="post"
      enctype="application/x-www-form-urlencoded"
    >
      <input
        type="text"
        id="name"
        name="name"
        class="w-full border"
        placeholder="Nom del centre"
      />
      <button
        type="submit"
        class="w-full py-2 bg-green-500 text-white rounded-t-md rounded-b-2xl"
        >Submit</button
      >
    </form>
    <h3 class="mt-6 mb-3 text-xl text-white font-semibold">Eliminar centro</h3>
    <form
      action="http://localhost:3000/esborrar-centre"
      method="post"
      enctype="application/x-www-form-urlencoded"
    >
      <select id="delete" name="delete" class="w-full border"></select>
      <button
        type="submit"
        class="w-full py-2 bg-red-500 text-white rounded-t-md rounded-b-2xl"
        >Submit</button
      >
    </form>
    <h3 class="mt-6 mb-3 text-xl text-white font-semibold">Añadir artículo</h3>
    <form
      action="http://localhost:3000/afegir-article"
      method="post"
      enctype="application/x-www-form-urlencoded"
    >
      <input
        type="text"
        id="barcode"
        name="barcode"
        placeholder="Codi de barres"
        class="w-full border"
      />
      <input
        type="text"
        id="article"
        name="article"
        placeholder="Nom de l'article"
        class="w-full border rounded-md"
      />
      <button
        type="submit"
        class="w-full py-2 bg-green-500 text-white rounded-t-md rounded-b-2xl"
        >Submit</button
      >
    </form>
  </div>
</div>

<script>
  // Fetch data for the quantity select element
  document.addEventListener("DOMContentLoaded", (event) => {
    const deleteSelect = document.getElementById("delete");

    // Fetch data for the dropdowns
    fetch(`http://localhost:3000/afegir-centre`, {
      method: "GET",
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
      },
    })
      .then((response) => response.json())
      .then((data) => {
        data.forEach((item) => {
          const deleteOption = document.createElement("option");
          deleteOption.value = item.id;
          deleteOption.text = item.centro + " - " + item.id;
          deleteSelect.appendChild(deleteOption);
        });

        const savedDelete = localStorage.getItem("selectedDelete");
        if (savedDelete) {
          deleteSelect.value = savedDelete;
        }
      })
      .catch((error) => {
        console.error("Error fetching data for dropdowns:", error);
      });

    deleteSelect.addEventListener("change", (event) => {
      localStorage.setItem("selectedDelete", event.target.value);
    });

    // Check for notifications in the URL
    const urlParams = new URLSearchParams(window.location.search);
    const notification = urlParams.get("message");
    if (notification) {
      document.getElementById("notification").innerHTML += notification;
      document.getElementById("notification").classList.remove("hidden");
    }

    // Post request localhost:3000/codi-en-vigor to get the current code, pass the adminlogin code
    fetch(`http://localhost:3000/codi-en-vigor`, {
      method: "POST",
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
      },
      body: `code=${localStorage.getItem("adminlogin")}`,
    })
      .then((response) => response.json())
      .then((data) => {
        console.log(data);
        document.getElementById("pwd").innerHTML = data.data.code;
        var date = new Date(data.data.expiration).toLocaleString();
        document.getElementById("expiration").innerHTML = date;
      })
      .catch((error) => {
        console.error("Error fetching data for dropdowns:", error);
      });
  });

  // Open and close settings modal
  document
    .getElementById("openSettings")
    .addEventListener("click", function () {
      document.getElementById("settingsModal").classList.remove("hidden");
    });

  document
    .getElementById("closeSettings")
    .addEventListener("click", function () {
      document.getElementById("settingsModal").classList.add("hidden");
    });

  // Open and close password modal
  document
    .getElementById("openPassword")
    .addEventListener("click", function () {
      document.getElementById("passwordModal").classList.remove("hidden");
    });

  document
    .getElementById("closePassword")
    .addEventListener("click", function () {
      document.getElementById("passwordModal").classList.add("hidden");
    });

  document.addEventListener("submit", function (event) {
    const form = event.target;
    const barcode = localStorage.getItem("adminlogin");
    if (!barcode) {
      const newBarcode = prompt("Please enter the barcode:");
      if (!newBarcode) {
        event.preventDefault();
        return;
      }
      localStorage.setItem("adminlogin", newBarcode);
      return;
    }
    const input = document.createElement("input");
    input.type = "hidden";
    input.name = "code";
    input.value = barcode;
    form.appendChild(input);
  });
</script>

<script is:inline>
  document.addEventListener("DOMContentLoaded", async (event) => {
    let isValid = false;
    while (!isValid) {
      isValid = await getCode();
    }
  });

  async function getCode() {
    let code = localStorage.getItem("adminlogin");
    if (!code) {
      code = prompt("Please enter the verification code:");
      if (code) {
        localStorage.setItem("adminlogin", code);
      }
    }

    // Check if the code is expired
    const response = await fetch(`http://localhost:3000/codi-expirat-admin`, {
      method: "POST",
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
      },
      body: `code=${code}`,
    });

    const data = await response.json();
    console.log(data);
    if (data.expired) {
      localStorage.removeItem("adminlogin");
      alert("The verification code is incorrect or has expired.");
      return false;
    } else {
      return true;
    }
  }

  function generatePassword() {
    const password = Math.floor(100000 + Math.random() * 900000); // Generate a random 6-digit number
    document.getElementById("password").value = password;

    const expirationToggle = document.getElementById("expirationToggle").value;
    let expirationDate;

    if (expirationToggle === "today") {
      // Set expiration to midnight today
      const today = new Date();
      expirationDate = new Date(today.setHours(24, 0, 0, 0)).toISOString();
    } else {
      // Set the expiration date to the selected date at midnight
      const expirationDateInput =
        document.getElementById("expirationDate").value;
      if (!expirationDateInput) {
        return;
      }
      expirationDate = new Date(expirationDateInput).toISOString();
    }

    document.getElementById("expiration").value = expirationDate;

    // Submit the form
    document.getElementById("passwordForm").submit();
  }

  function toggleExpiration() {
    const expirationToggle = document.getElementById("expirationToggle").value;
    const datePickerContainer = document.getElementById("datePickerContainer");

    if (expirationToggle === "manual") {
      datePickerContainer.classList.remove("hidden");
    } else {
      datePickerContainer.classList.add("hidden");
    }
  }
</script>

<style is:global>
  input,
  select {
    @apply block w-full px-3 py-4 mb-1 bg-slate-300 rounded-t-2xl rounded-b-md border-none;
  }

  .hidden {
    display: none;
  }

  .slideup {
    animation: slide-up 0.3s ease;
  }

  @keyframes slide-up {
    from {
      transform: translateY(100%);
    }
    to {
      transform: translateY(0);
    }
  }

  .fadein {
    animation: fadein 0.3s ease forwards;
  }

  @keyframes fadein {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  .spinner {
    animation: spin 5s linear infinite;
  }

  @keyframes spin {
    100% {
      transform: rotate(360deg);
    }
  }

  .hidetime {
    animation: fadeout 2s 5000ms forwards;
  }

  @keyframes fadeout {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }
</style>
