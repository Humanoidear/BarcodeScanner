---
import Layout from "../layouts/Layout.astro";

const BACKEND_URL = import.meta.env.BACKEND_URL;
---

<Layout title="DANAscan">
  <main>
    <p id="BACKEND_URL" class="hidden">{BACKEND_URL}</p>
    <div
      id="notification"
      class="hidetime w-full top-0 bg-green-500 text-left text-white p-2 px-3 rounded-b-xl inline-flex items-center justify-center gap-1 hidden pointer-events-none z-50 absolute"
    >
      <svg
        class="w-8 h-8"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
      >
        <path
          d="M3 3h16v2H5v14h14v2H3V3zm18 0h-2v18h2V3zM11 15h2v2h-2v-2zm2-8h-2v6h2V7z"
          fill="currentColor"></path>
      </svg>
    </div>
    <div id="truckStop" onclick="stopTruck();" class="mt-6 left-1/2 -translate-x-1/2 w-[calc(100%-30px)] max-w-[600px] rounded-2xl bg-slate-800 p-2 flex flex-row items-center gap-1 hidden z-10 absolute">
      <div class="w-full p-2 rounded-xl text-center text-white relative bg-red-400 hover:bg-red-500">
      Parar de descargar palets de <span id="truckStopWarehouse" class="font-bold"></span>
      </div>
    </div>
    <div
      class="left-1/2 top-6 -translate-x-1/2 w-[calc(100vw-30px)] h-[calc(100dvh-50px)] max-w-[600px] flex flex-col items-center gap-3 relative"
    >
      <div class="w-full flex flex-row items-center gap-1">
        <div
          class="w-full rounded-2xl bg-slate-800 p-2 flex flex-row items-center gap-1"
        >
          <div
            id="receive"
            class="w-full p-2 rounded-l-xl rounded-r-md text-center text-white hidden relative"
          >
            Recibir
          </div>
          <div
            id="send"
            class="w-full p-2 rounded-l-md rounded-r-xl text-center text-white relative"
          >
            Enviar
          </div>
        </div>
        <div
          onclick="openmodal('centerSelectModal')"
          class="p-2 rounded-2xl bg-slate-800 hover:bg-slate-700 text-center text-white relative"
        >
          <svg
            class="w-10 h-10 scale-75"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
          >
            <path
              d="M2 2h14v4h6v16H2V2zm18 6h-4v2h2v2h-2v2h2v2h-2v2h2v2h2V8zm-6-4H4v16h2v-2h6v2h2V4zM6 6h2v2H6V6zm6 0h-2v2h2V6zm-6 4h2v2H6v-2zm6 0h-2v2h2v-2zm-6 4h2v2H6v-2zm6 0h-2v2h2v-2z"
              fill="currentColor"></path>
          </svg>
        </div>
      </div>
      <div
        id="camera"
        class="w-full h-full rounded-2xl border-2 border-white/20 inline-block overflow-hidden"
      >
        <div class="w-10 h-10 top-24 right-6 text-white z-0 absolute">
          <svg
            class="spinner w-10 h-10"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
          >
            <path
              d="M13 2h-2v6h2V2zm0 14h-2v6h2v-6zm9-5v2h-6v-2h6zM8 13v-2H2v2h6zm7-6h2v2h-2V7zm4-2h-2v2h2V5zM9 7H7v2h2V7zM5 5h2v2H5V5zm10 12h2v2h2v-2h-2v-2h-2v2zm-8 0v-2h2v2H7v2H5v-2h2z"
              fill="currentColor"></path>
          </svg>
        </div>
      </div>
      <button
        id="capture"
        class="w-full py-6 font-bold text-center text-white bg-blue-400 hover:bg-blue-500 rounded-2xl flex flex-col items-center"
      >
        <svg
          id="capture-icon"
          class="w-10 h-10"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
        >
          <path
            d="M9 3H7v2H2v16h20V5h-5V3H9zm8 4h3v12H4V7h5V5h6v2h2zm-7 2h4v2h-4V9zm4 6h-4v2h4v-2h2v-4h-2v4zm-6-4h2v4H8v-4z"
            fill="currentColor"></path>
        </svg>
      </button>
    </div>
  </main>

  <div
    id="truckSelectModal"
    class="hidden fadein fixed inset-0 flex flex-col items-center justify-between z-40"
  >
  <div onclick="stopTruck();" class="mt-6 w-[calc(100%-30px)] max-w-[600px] rounded-2xl bg-slate-800 p-2 flex flex-row items-center gap-1">
    <div id="receive" class="w-full p-2 rounded-xl text-center text-white relative bg-red-400 hover:bg-red-500">
    Cancelar
    </div>
  </div>
    <div
      id="truckPane"
      class="slideup w-full max-w-[600px] p-6 bg-gray-900 rounded-t-3xl text-white flex flex-col items-center"
    >
      <h3 class="w-full text-3xl font-bold mb-6">
        ¿De qué centro provienen los palets?
      </h3>
      <select
        id="truckSelect"
        class="mb-1 bg-slate-700 hover:bg-slate-600 border-none rounded-t-2xl rounded-b-md p-2 w-full h-14 text-white transition-all relative"
      >
        <option value="" disabled selected>Selecciona un centro</option>
      </select>
      <button
        onclick="closeTruckModal();"
        class="w-full h-14 rounded-t-md rounded-b-2xl bg-green-400 hover:bg-green-500 flex flex-col items-center justify-center"
      >
        <svg
          class="scale-50"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
        >
          <path
            d="M5 3H3v18h18V3H5zm0 2h14v14H5V5zm4 7H7v2h2v2h2v-2h2v-2h2v-2h2V8h-2v2h-2v2h-2v2H9v-2z"
            fill="currentColor"></path>
        </svg>
      </button>
      <p class="beforesvg w-full mt-3 text-white/30 inline-block items-center">
        Pregunta al conductor del camión para obtener el centro de origen.
      </p>
    </div>
  </div>

  <div
    id="comboSelectModal"
    class="hidden fadein fixed inset-0 bg-gray-700 bg-opacity-75 flex flex-col items-center justify-end z-40"
  >
    <div
      id="comboPane"
      class="slideup w-full max-w-[600px] p-6 bg-gray-900 rounded-t-3xl text-white flex flex-col items-center"
    >
      <h3 id="selectQuestion" class="w-full text-3xl font-bold mb-6"></h3>
      <div class="w-full flex flex-row items-center gap-1">
        <button
          onclick="closemodal('comboSelectModal', 'comboPane');"
          id="no"
          class="w-1/2 h-14 rounded-l-2xl rounded-r-md bg-red-400 hover:bg-red-500 flex flex-col items-center justify-center"
        >
          <svg
            class="scale-75"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
          >
            <path
              d="M5 5h2v2H5V5zm4 4H7V7h2v2zm2 2H9V9h2v2zm2 0h-2v2H9v2H7v2H5v2h2v-2h2v-2h2v-2h2v2h2v2h2v2h2v-2h-2v-2h-2v-2h-2v-2zm2-2v2h-2V9h2zm2-2v2h-2V7h2zm0 0V5h2v2h-2z"
              fill="currentColor"></path>
          </svg>
        </button>
        <div id="yes" class="w-1/2"></div>
      </div>
    </div>
  </div>

  <div
    id="loginModal"
    class="hidden fadein fixed inset-0 bg-gray-700 flex flex-col items-center justify-end z-40"
  >
    <p
      id="loginError"
      class="fadein m-3 w-[calc(100%-50px)] max-w-[550px] bg-red-400 rounded-2xl p-2 text-white text-center hidden"
    >
      Código incorrecto o expirado.
    </p>
    <div
      id="loginPane"
      class="slideup bg-gray-900 rounded-t-3xl p-6 w-full max-w-[600px] text-white flex flex-col items-center gap-1"
    >
      <img
        src="/DANAscan-logo.png"
        alt="DANAscan"
        class="huerotate h-32 w-28 object-cover"
      />
      <h2 class="w-full text-3xl font-bold mb-6">Identificación</h2>
      <div class="w-full flex flex-col items-center gap-1">
        <input
          type="password"
          name="password"
          class="bg-slate-600 border-none rounded-t-2xl rounded-b-md p-2 w-full h-14 text-white"
          placeholder="Código"
        />
        <button
          id="loginSubmit"
          class="w-full h-14 rounded-t-md rounded-b-2xl bg-green-400 hover:bg-green-500 flex flex-col items-center justify-center"
        >
          <svg
            class="scale-50"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
          >
            <path
              d="M5 3H3v18h18V3H5zm0 2h14v14H5V5zm4 7H7v2h2v2h2v-2h2v-2h2v-2h2V8h-2v2h-2v2h-2v2H9v-2z"
              fill="currentColor"></path>
          </svg>
        </button>
      </div>
      <p class="beforesvg mt-3 text-white/30 inline-block items-center">
        Pregunta al responsable del centro para obtener el código de
        verificación.
      </p>
    </div>
  </div>

  <div
    id="centerSelectModal"
    class="hidden fadein fixed inset-0 bg-gray-700 bg-opacity-75 flex flex-col items-center justify-between"
  >
    <div
      class="slidedown w-full max-w-[600px] p-6 bg-gray-900 rounded-b-3xl text-white flex flex-col items-center"
    >
      <img
        src="/DANAscan-logo-complete.png"
        class="huerotate pr-10 w-full max-w-[400px] object-cover"
      />
      <div class="mt-6 max-w-[700px] flex flex-col items-start gap-3">
        <p class="text-xl">
          Programat i dissenyat per <a
            class="underline"
            href="https://www.linkedin.com/in/alejandro-gonz%C3%A1lez-a30727216/"
            >Alejandro González</a
          >.
        </p>
        <br />
        <p class="inline-flex items-center">
          <img src="/flag.png" class="mr-3 w-7" />2024
        </p>
      </div>
    </div>

    <div
      id="centerPane"
      class="slideup bg-gray-900 rounded-t-3xl p-6 w-full max-w-[600px] text-white"
    >
      <h2 class="text-3xl font-bold mb-6">Seleccionar centro</h2>
      <select
        id="quantity"
        name="quantity"
        class="mb-1 bg-slate-600 border-none rounded-t-2xl rounded-b-md p-2 w-full h-14 text-white relative"
      >
        <option value="" disabled selected>Selecciona un centro</option>
      </select>
      <button
        id="closeCenterSelect"
        onclick="closemodal('centerSelectModal', 'centerPane')"
        class="w-full h-14 rounded-t-md rounded-b-2xl bg-green-400 hover:bg-green-500 flex flex-col items-center justify-center"
      >
        <svg
          class="scale-75"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
        >
          <path
            d="M18 6h2v2h-2V6zm-2 4V8h2v2h-2zm-2 2v-2h2v2h-2zm-2 2h2v-2h-2v2zm-2 2h2v-2h-2v2zm-2 0v2h2v-2H8zm-2-2h2v2H6v-2zm0 0H4v-2h2v2z"
            fill="currentColor"></path>
        </svg>
      </button>
    </div>
  </div>

  <div
    id="sendModal"
    class="fadein hidden fixed inset-0 bg-gray-700 bg-opacity-75 flex items-end justify-center"
  >
    <button
      onclick="closemodal('sendModal', 'sendPane')"
      class="top-[25px] right-[15px] w-14 h-14 bg-red-400 text-white rounded-2xl absolute"
      ><svg
        class="scale-75"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
      >
        <path
          d="M5 5h2v2H5V5zm4 4H7V7h2v2zm2 2H9V9h2v2zm2 0h-2v2H9v2H7v2H5v2h2v-2h2v-2h2v-2h2v2h2v2h2v2h2v-2h-2v-2h-2v-2h-2v-2zm2-2v2h-2V9h2zm2-2v2h-2V7h2zm0 0V5h2v2h-2z"
          fill="currentColor"></path>
      </svg></button
    >
    <div
      id="sendPane"
      class="slideup bg-gray-900 rounded-t-3xl p-6 w-full max-w-[600px] text-white"
    >
      <div
        id="barcode-result"
        class="mb-6 w-full text-white text-center flex flex-col items-center gap-1"
      >
      </div>
      <form
        id="errNotFound-send-form"
        class="w-full flex flex-col items-center gap-1 hidden relative"
        action={`${BACKEND_URL}/upload`}
        method="post"
        enctype="application/x-www-form-urlencoded"
      >
        <input type="hidden" id="timestamp-input-2" name="timestamp" />
        <input type="hidden" id="quantity-1" name="quantity" />
        <select
          id="errNotFound"
          name="barcode"
          class="mb-3 bg-slate-600 border-none rounded-2xl p-2 w-full h-14 text-white relative"
        >
        </select>
        <button
          type="submit"
          class="w-full h-14 rounded-2xl bg-green-400 hover:bg-green-500 flex flex-col items-center justify-center"
        >
          <svg
            class="scale-50 text-white"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
          >
            <path
              d="M5 3H3v18h18V3H5zm0 2h14v14H5V5zm4 7H7v2h2v2h2v-2h2v-2h2v-2h2V8h-2v2h-2v2h-2v2H9v-2z"
              fill="currentColor"></path>
          </svg>
        </button>
      </form>
      <form
        id="send-form"
        class="w-full flex flex-row items-center gap-1 relative"
        action={`${BACKEND_URL}/upload`}
        method="post"
        enctype="application/x-www-form-urlencoded"
      >
        <input type="hidden" id="barcode-input" name="barcode" />
        <input type="hidden" id="timestamp-input" name="timestamp" />
        <input type="hidden" id="quantity-2" name="quantity" />
        <button
          type="submit"
          class="w-full h-14 rounded-2xl bg-green-400 hover:bg-green-500 flex flex-col items-center justify-center"
        >
          <svg
            class="scale-50"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
          >
            <path
              d="M5 3H3v18h18V3H5zm0 2h14v14H5V5zm4 7H7v2h2v2h2v-2h2v-2h2v-2h2V8h-2v2h-2v2h-2v2H9v-2z"
              fill="currentColor"></path>
          </svg>
        </button>
      </form>
      <p class="beforesvg mt-3 text-white/30 inline-block items-center">
        Te encuentras en el centro
        <span id="centerLocation" class="text-white/60"></span>, si no es
        correcto, cambia tu ubicación en el menú superior derecho.
      </p>
    </div>
  </div>

  <div
    id="receiveModal"
    class="fadein hidden fixed inset-0 bg-gray-700 bg-opacity-75 flex items-end justify-center overflow-scroll z-40"
  >
    <button
      onclick="closemodal('receiveModal', 'receivePane')"
      class="top-[25px] right-[15px] w-14 h-14 bg-red-400 text-white rounded-2xl absolute"
      ><svg
        class="scale-75"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
      >
        <path
          d="M5 5h2v2H5V5zm4 4H7V7h2v2zm2 2H9V9h2v2zm2 0h-2v2H9v2H7v2H5v2h2v-2h2v-2h2v-2h2v2h2v2h2v2h2v-2h-2v-2h-2v-2h-2v-2zm2-2v2h-2V9h2zm2-2v2h-2V7h2zm0 0V5h2v2h-2z"
          fill="currentColor"></path>
      </svg></button
    >
    <div
      id="receivePane"
      class="max-h-screen slideup bg-gray-900 rounded-t-3xl p-6 w-full max-w-[600px] text-white overflow-scroll"
    >
      <p class="text-4xl font-bold mb-6 flex flex-col items-center" id="receiveNum"></p>
      <div id="receiveList" class="flex flex-col gap-1"></div>
    </div>
  </div>
</Layout>

<script>
  const BACKEND_URL = document.getElementById("BACKEND_URL").textContent;
  import Quagga from "@ericblade/quagga2";

  // Function to initialize and start the Quagga scanner
  function startScanner() {
    Quagga.init(
      {
        inputStream: {
          name: "Live",
          type: "LiveStream",
          target: document.querySelector("#camera"), // Element to show the camera preview
        },
        decoder: {
          readers: ["code_39_reader"],
        },
      },
      function (err) {
        if (err) {
          console.error(err);
          alert("Error initializing the scanner: " + err.message);
          return;
        }
        Quagga.start();
      }
    );
  }

  // Start the scanner when the page loads
  window.addEventListener("load", startScanner);

  // Capture barcode when the button is clicked
  document.getElementById("capture").addEventListener("click", function () {
    Quagga.onDetected(function (result) {
      if (result && result.codeResult && result.codeResult.code) {
        const barcode = result.codeResult.code;
        const timestamp = new Date().toISOString();

        if (localStorage.getItem("mode") == "1") {
          document.getElementById("sendModal").classList.remove("hidden");

          document.getElementById("centerLocation").textContent =
            document.getElementById("quantity").selectedOptions[0].textContent;

          // Verify the barcode
          fetch(`${BACKEND_URL}/verificar-article`, {
            method: "POST",
            headers: {
              "Content-Type": "application/x-www-form-urlencoded",
            },
            body: `barcode=${barcode}`,
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.length == 0) {
                document.getElementById("send-form").classList.add("hidden");
                document.getElementById("barcode-result").innerHTML =
                  `<h2 class="mb-0 w-full text-3xl font-bold">No se ha encontrado el artículo</h2><span class="w-full text-lg opacity-30 font-normal">( ${barcode} )</span><br><p class="w-full">Verifique que se ha escaneado correctamente, o elija un artículo de la lista.</p>`;
                document
                  .getElementById("errNotFound-send-form")
                  .classList.remove("hidden");

                fetch(`${BACKEND_URL}/verificar-article`)
                  .then((response) => response.json())
                  .then((data) => {
                    data.forEach((item) => {
                      const option = document.createElement("option");
                      option.value = item.lectura;
                      option.text = item.articulo + " - " + item.lectura;
                      document
                        .getElementById("errNotFound")
                        .appendChild(option);
                    });
                  });

                document.getElementById("timestamp-input-2").value = timestamp;
                return;
              }
              document.getElementById("barcode-input").value = barcode;
              document.getElementById("timestamp-input").value = timestamp;
              document.getElementById("barcode-result").innerHTML =
                `<h2 class="mb-0 text-3xl font-bold">${data[0].articulo}</h2><span class="text-lg opacity-30 font-normal">(${barcode})</span>`;
            });
        }
        document.querySelector("#barcode-input").value = barcode;
        document.querySelector("#timestamp-input").value = timestamp;

        if (localStorage.getItem("mode") == "2") {
          fetch(`${BACKEND_URL}/verificar`, {
            method: "POST",
            headers: {
              "Content-Type": "application/x-www-form-urlencoded",
            },
            body: `barcode=${barcode}&almacen=${localStorage.getItem(
              "truckSelect"
            )}`,
          })
            .then((response) => response.json())
            .then((data) => {
              document
                .getElementById("receiveModal")
                .classList.remove("hidden");

              // Get a list of all the centers in the data array, each center will be shown once
              const centers = data.data
                .map((item) => item.almacen)
                .filter((value, index, self) => self.indexOf(value) === index);

              const receiveList = document.getElementById("receiveList");
              receiveList.innerHTML = "";

              const onRouteData = data.data.filter(
                (item) => item.fulfilled == 0
              );
              const div = document.getElementById("receiveList");

              document.getElementById("receiveNum").innerHTML = `
                <h2 class="mb-0 text-3xl text-center font-bold">${data.product}</h2><span class="text-lg opacity-30 font-normal">(${barcode}) | ${onRouteData.length} ${onRouteData.length == 1 ? "palet" : "palets"} en ruta</span>
                `;

              if (onRouteData.length > 0) {
                div.innerHTML += `
                  <button
                    type="submit"
                    class="w-full h-14 rounded-2xl bg-green-400 hover:bg-green-500 flex flex-col items-center justify-center"
                    onclick="acceptPaletSend(${barcode}, ${localStorage.getItem("truckSelect")});"
                  >
                    <svg
                      class="scale-50 text-white"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M5 3H3v18h18V3H5zm0 2h14v14H5V5zm4 7H7v2h2v2h2v-2h2v-2h2v-2h2V8h-2v2h-2v2h-2v2H9v-2z"
                        fill="currentColor"
                      ></path>
                    </svg>
                  </button>
                  <p class="beforesvg mt-3 text-white/30 inline-block items-center">
                    Se marcará como entregado un palet de <span class="text-white/60">${data.product}</span> en ruta de <span class="text-white/60">${data.warehouse}</span>.
                  </p>
                `;
              } else {
                console.log("No palets found");
                document.getElementById("receivePane").classList.add("bg-orange-900");
                div.innerHTML += `<div class="bg-orange-800 rounded-2xl px-5 py-3 text-white text-lg flex flex-col items-center justify-between gap-3">Este palet de ${data.product} (${data.warehouse}) no ha sido contabilizado, ¿quieres recibirlo de todos modos?
                <br><button onclick="simulateSend('${barcode}');" class="w-full h-14 rounded-2xl bg-green-400 hover:bg-green-500 font-bold flex flex-col items-center justify-center mt-3">Enviar de todos modos</button></div>`;
              }
            });
        }

        // Change the capture button icon to red and allow reshoot
        const captureButton = document.getElementById("capture");
        const captureIcon = document.getElementById("capture-icon");
        captureButton.classList.remove("bg-blue-400", "hover:bg-blue-500");
        captureButton.classList.add("bg-red-400", "hover:bg-red-500");
        captureIcon.innerHTML =
          '<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"> <path d="M8 4h2v2H8V4zm10 6V8H8V6H6v2H4v2h2v2h2v2h2v-2H8v-2h10zm0 8v-8h2v8h-2zm0 0v2h-6v-2h6z" fill="currentColor"/> </svg>';

        // Allow reshoot
        captureButton.addEventListener(
          "click",
          function () {
            window.location.href = window.location.pathname;
          },
          { once: true }
        );

        Quagga.stop();
      }
    });
  });

  // Fetch data for the quantity select element
  document.addEventListener("DOMContentLoaded", (event) => {
    if (localStorage.getItem("truckSelect")) {
      document.getElementById("truckStop").classList.remove("hidden");
      document.getElementById("truckStopWarehouse").textContent = localStorage.getItem("truckSelectName");
    }
    const select = document.getElementById("quantity");

    // Fetch data for the dropdowns
    fetch(`${BACKEND_URL}/afegir-centre`, {
      method: "GET",
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
      },
    })
      .then((response) => response.json())
      .then((data) => {
        data.forEach((item) => {
          const option1 = document.createElement("option");
          option1.value = item.id;
          option1.text = item.centro;
          select.appendChild(option1);

          const truckSelect = document.getElementById("truckSelect");
          const truckOption = document.createElement("option");
          truckOption.value = item.id;
          truckOption.text = item.centro;
          truckSelect.appendChild(truckOption);

          const deleteOption = document.createElement("option");
          deleteOption.value = item.id;
          deleteOption.text = item.centro;
        });

        

        // Set the dropdown to the value stored in localStorage
        const savedQuantity = localStorage.getItem("selectedQuantity");
        if (savedQuantity) {
          // If the center in localStorage coincides with a center in the dropdown which has isMain "true", show "receive" button
          const center = data.find((item) => item.id == savedQuantity);
          if (center.ismain) {
            console.log("show receive");
            document.getElementById("receive").classList.remove("hidden");
          } else {
            document.getElementById("send").classList.remove("rounded-l-md");
            document.getElementById("send").classList.remove("rounded-l-md");
            document.getElementById("send").classList.add("bg-slate-600/5");
            document.getElementById("send").classList.add("rounded-xl");
            document.getElementById("send").classList.remove("text-center");
            document.getElementById("send").classList.add("text-left");
            document.getElementById("send").innerHTML = "<span class='beforesvg text-white/30'>Enviando desde <span class='text-white font-bold'>" + center.centro + "</span></span>";
            localStorage.setItem("mode", "1");
            mode1();
          }
          select.value = savedQuantity;
        }
      })
      .catch((error) => {
        console.error("Error fetching data for dropdowns:", error);
      });

    // Save the selected value in localStorage when an option is selected
    const saveSelectedQuantity = (event) => {
      localStorage.setItem("selectedQuantity", event.target.value);
      select.value = event.target.value;

      const selectedQuantity = select.value;
      document.getElementById("quantity-1").value = selectedQuantity;
      document.getElementById("quantity-2").value = selectedQuantity;

      fetch(`${BACKEND_URL}/afegir-centre`, {
        method: "GET",
        headers: {
          "Content-Type": "application/x-www-form-urlencoded",
        },
      })
        .then((response) => response.json())
        .then((data) => {
          // Set the dropdown to the value stored in localStorage
          const savedQuantity = localStorage.getItem("selectedQuantity");
          if (savedQuantity) {
            // If the center in localStorage coincides with a center in the dropdown which has isMain "true", show "receive" button
            const center = data.find((item) => item.id == savedQuantity);
            console.log(center);
            if (center.ismain) {
              console.log("show receive");
              document.getElementById("receive").classList.remove("hidden");
              document.getElementById("send").classList.remove("rounded-xl");
              document.getElementById("send").classList.add("rounded-l-md");
              document.getElementById("send").classList.remove("bg-slate-600/5");
              document.getElementById("send").classList.remove("text-left");
              document.getElementById("send").classList.add("text-center");
              document.getElementById("send").innerHTML = "Enviar";
            } else {
              document.getElementById("receive").classList.add("hidden");
              document.getElementById("send").classList.remove("rounded-l-md");
            document.getElementById("send").classList.add("bg-slate-600/5");
            document.getElementById("send").classList.add("rounded-xl");
            document.getElementById("send").classList.remove("text-center");
            document.getElementById("send").classList.add("text-left");
            document.getElementById("send").innerHTML = "<span class='beforesvg text-white/30'>Enviando desde <span class='text-white font-bold'>" + center.centro + "</span></span>";
              localStorage.setItem("mode", "1");
              mode1();
            }
            select.value = savedQuantity;
          }
        })
        .catch((error) => {
          console.error("Error fetching data for dropdowns:", error);
        });
    };

    const truckSelect = document.getElementById("truckSelect");

    // Change the selected option in truckSelect to the one in localStorage
    if (localStorage.getItem("truckSelect")) {
      truckSelect.value = localStorage.getItem("truckSelect");
    }

    truckSelect.addEventListener("change", (event) => {
      localStorage.setItem("truckSelect", event.target.value);
      localStorage.setItem("truckSelectName", event.target.selectedOptions[0].textContent);
    });

    if (!localStorage.getItem("selectedQuantity")) {
      document.getElementById("centerSelectModal").classList.remove("hidden");
    } else {
      const selectedQuantity = localStorage.getItem("selectedQuantity");
      document.getElementById("quantity-1").value = selectedQuantity;
      document.getElementById("quantity-2").value = selectedQuantity;
    }

    select.addEventListener("change", saveSelectedQuantity);

    // Set the mode to send by default
    if (!localStorage.getItem("mode")) {
      localStorage.setItem("mode", "1");
    }

    if (localStorage.getItem("mode") == "1") {
      mode1();
    } else {
      mode2();
    }

    // Check for notifications in the URL
    const urlParams = new URLSearchParams(window.location.search);
    const notification = urlParams.get("message");
    if (notification) {
      document.getElementById("notification").innerHTML += notification;
      document.getElementById("notification").classList.remove("hidden");
    }
  });

  // Send or receive data
  document.getElementById("send").addEventListener("click", function () {
    localStorage.setItem("mode", "1");
    mode1();
  });

  document.getElementById("receive").addEventListener("click", function () {
    localStorage.setItem("mode", "2");
    mode2();
  });

  function mode1() {
    document.getElementById("send").classList.remove("bg-slate-700");
    document.getElementById("send").classList.add("bg-green-500");
    document.getElementById("receive").classList.remove("bg-green-500");
    document.getElementById("receive").classList.add("bg-slate-700");
    document.getElementById("truckStop").classList.add("hidden");
    localStorage.removeItem("truckSelect");
  }

  function mode2() {
    document.getElementById("receive").classList.remove("bg-slate-700");
    document.getElementById("receive").classList.add("bg-green-500");
    document.getElementById("send").classList.remove("bg-green-500");
    document.getElementById("send").classList.add("bg-slate-700");
    if (localStorage.getItem("truckSelect") == null) {
      document.getElementById("truckSelectModal").classList.remove("hidden");
    } else {
      document.getElementById("truckStop").classList.remove("hidden");
      document.getElementById("truckStopWarehouse").textContent =
        localStorage.getItem("truckSelectName");
    }
  }

  // Hijack all form submissions to add the "codigo" parameter, it is in localStorage, if not, prompt the user to add it
  document.addEventListener("submit", function (event) {
    const form = event.target;
    const barcode = localStorage.getItem("barcode");
    if (!barcode) {
      const newBarcode = prompt(
        "Por favor introduce el código de verificación:"
      );
      if (!newBarcode) {
        event.preventDefault();
        return;
      }
      localStorage.setItem("barcode", newBarcode);
      return;
    }
    const input = document.createElement("input");
    input.type = "hidden";
    input.name = "code";
    input.value = barcode;
    form.appendChild(input);
  });
</script>

<script is:inline>
  const BACKEND_URL = document.getElementById("BACKEND_URL").textContent;
  document.addEventListener("DOMContentLoaded", async (event) => {
    let isValid = false;
    isValid = await getCode();
  });

  // Listen for loginSubmit button click
  document
    .getElementById("loginSubmit")
    .addEventListener("click", async function () {
      localStorage.setItem(
        "barcode",
        document.querySelector("input[name='password']").value
      );
      let isValid = false;
      isValid = await getCode();
      if (!isValid) {
        document.getElementById("loginError").classList.remove("hidden");
        document.getElementById("loginError").innerHTML =
          "Código incorrecto o expirado.";
      }
    });

  async function getCode() {
    let code = localStorage.getItem("barcode");
    if (!code) {
      // code = prompt("Por favor introduce el código de verificación:");
      if (code) {
        localStorage.setItem("barcode", code);
      }
    }

    // Check if the code is expired
    const response = await fetch(`${BACKEND_URL}/codi-expirat`, {
      method: "POST",
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
      },
      body: `code=${code}`,
    });

    const data = await response.json();
    if (data.expired) {
      localStorage.removeItem("barcode");
      document.getElementById("loginModal").classList.remove("hidden");
      return false;
    } else {
      closemodal("loginModal", "loginPane");
      return true;
    }
  }

  function deletePalet(id) {
    document.getElementById("comboSelectModal").classList.remove("hidden");
    document.getElementById("selectQuestion").textContent =
      "¿Quieres DESCARTAR el palet?";
    document.getElementById("yes").innerHTML = `<button
          onclick="deletePaletSend(${id})"
          class="w-full h-14 rounded-l-md rounded-r-2xl bg-green-400 hover:bg-green-500 flex flex-col items-center justify-center"
        >
          <svg
            class="scale-75"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
          >
            <path
              d="M18 6h2v2h-2V6zm-2 4V8h2v2h-2zm-2 2v-2h2v2h-2zm-2 2h2v-2h-2v2zm-2 2h2v-2h-2v2zm-2 0v2h2v-2H8zm-2-2h2v2H6v-2zm0 0H4v-2h2v2z"
              fill="currentColor"></path>
          </svg>
        </button>`;
  }

  function deletePaletSend(id) {
    const barcode = localStorage.getItem("barcode");
    fetch(`${BACKEND_URL}/esborrar-palet`, {
      method: "POST",
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
      },
      body: `id=${id}&code=${barcode}`,
    })
      .then((response) => response.json())
      .then((data) => {
        if (data.message == 0) {
          window.location.href = window.location.pathname;
        } else {
          closemodal("receiveModal", "receivePane");
          closemodal("comboSelectModal", "selectQuestion");
        }
      });
  }

  function acceptPaletSend(productid, warehouseid) {
    const barcode = localStorage.getItem("barcode");
    fetch(`${BACKEND_URL}/acceptar-palet`, {
      method: "POST",
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
      },
      body: `product=${productid}&almacen=${warehouseid}&code=${barcode}`,
    })
      .then((response) => response.json())
      .then((data) => {
        if (data.message == 0) {
          window.location.href = window.location.pathname;
        } else {
          closemodal("receiveModal", "receivePane");
          closemodal("comboSelectModal", "selectQuestion");
        }
      });
  }

  function openmodal(id) {
    document.getElementById(id).classList.remove("hidden");
  }

  function closemodal(id, id2) {
    document.getElementById("receivePane").classList.remove("bg-orange-400");
    if (id == "centerSelectModal") {
      const selectedQuantity = localStorage.getItem("selectedQuantity");
      if (!selectedQuantity) {
        document.getElementById("notification").innerHTML =
          "Por favor selecciona un centro.";
        document.getElementById("notification").classList.add("bg-red-400");
        document.getElementById("notification").classList.remove("hidden");
        setTimeout(() => {
          document.getElementById("notification").classList.add("hidden");
          document
            .getElementById("notification")
            .classList.remove("bg-red-400");
        }, 3500);
        return;
      }
    }
    document.getElementById(id2).classList.remove("slideup");
    document.getElementById(id2).classList.add("slideout");

    document.getElementById(id).classList.remove("fadein");
    document.getElementById(id).classList.add("fadeout");

    setTimeout(() => {
      document.getElementById(id).classList.add("hidden");
      document.getElementById(id2).classList.remove("slideout");
      document.getElementById(id2).classList.add("slideup");

      document.getElementById(id).classList.remove("fadeout");
      document.getElementById(id).classList.add("fadein");
    }, 300);
  }

  function stopTruck() {
    localStorage.removeItem("truckSelect");
    document.getElementById("truckStop").classList.add("hidden");
    localStorage.setItem("mode", "1");
    window.location.href = window.location.pathname;
  }

  function simulateSend(barcode) {
    fetch(`${BACKEND_URL}/simular-palet`, {
      method: "POST",
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
      },
      body: `barcode=${barcode}&almacen=${localStorage.getItem("truckSelect")}&code=${localStorage.getItem("barcode")}`,
    })
      .then((response) => response.json())
      .then((data) => {
        if (data.status == "success") {
          closemodal("receiveModal", "receivePane");
        }
      });
  }

  function closeTruckModal() {
    if (localStorage.getItem("truckSelect")) {
      document.getElementById("truckStop").classList.remove("hidden");
      document.getElementById("truckStopWarehouse").textContent = localStorage.getItem("truckSelectName");
      closemodal('truckSelectModal', 'truckPane');
    } else {
      document.getElementById("notification").innerHTML = "Por favor selecciona un centro.";
      document.getElementById("notification").classList.add("bg-red-400");
      document.getElementById("notification").classList.remove("hidden");
      setTimeout(() => {
        document.getElementById("notification").classList.add("hidden");
        document.getElementById("notification").classList.remove("bg-red-400");
      }, 3500);
    }
  }
</script>

<style is:global>
  video {
    width: 100% !important;
    height: 100% !important;
    object-fit: cover;
    z-index: 1;
    position: relative;
  }

  .hidden {
    display: none;
  }

  .slideup {
    animation: slide-up 0.3s ease;
  }

  @keyframes slide-up {
    from {
      transform: translateY(100%);
    }
    to {
      transform: translateY(0);
    }
  }

  .fadein {
    animation: fadein 0.3s ease forwards;
  }

  @keyframes fadein {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  .spinner {
    animation: spin 5s linear infinite;
  }

  @keyframes spin {
    100% {
      transform: rotate(360deg);
    }
  }

  .hidetime {
    animation: slideout 2s 2000ms forwards;
  }

  @keyframes fadeout {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }

  @keyframes slideout {
    from {
      transform: translateY(0);
    }
    to {
      transform: translateY(-100%);
    }
  }

  .slidedown {
    animation: slide-down 0.3s ease;
  }

  @keyframes slide-down {
    from {
      transform: translateY(-100%);
    }
    to {
      transform: translateY(0);
    }
  }

  .beforesvg::before {
    content: "";
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="w-6 h-6 mr-1" fill="none"><path d="M3 3h16v2H5v14h14v2H3V3zm18 0h-2v18h2V3zM11 15h2v2h-2v-2zm2-8h-2v6h2V7z" fill="currentColor"/></svg>');
    width: 1.3rem;
    height: 1.3rem;
    transform: translate(0, -1px);
    filter: invert(1);
    opacity: 0.3;
    display: inline-block;
    vertical-align: middle;
    margin-right: 0.15rem;
  }

  .beforecheck::before {
    content: "";
    background-image: url('data:image/svg+xml;utf8,<svg class="w-8 h-8" fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"> <path d="M18 6h2v2h-2V6zm-2 4V8h2v2h-2zm-2 2v-2h2v2h-2zm-2 2h2v-2h-2v2zm-2 2h2v-2h-2v2zm-2 0v2h2v-2H8zm-2-2h2v2H6v-2zm0 0H4v-2h2v2z" fill="currentColor"/> </svg>');
    width: 1.3rem;
    height: 1.3rem;
    transform: translate(0, -1px);
    filter: invert(1);
    display: inline-block;
    vertical-align: middle;
    margin-right: 0.15rem;
  }

  .fadeout {
    animation: fadeout 0.3s ease forwards;
  }

  .slideout {
    animation: slideout2 0.3s ease;
  }

  @keyframes slideout2 {
    from {
      transform: translateY(0);
    }
    to {
      transform: translateY(100%);
    }
  }

  .huerotate {
    animation: hue-rotate 5s linear infinite;
  }

  @keyframes hue-rotate {
    100% {
      filter: hue-rotate(360deg);
    }
  }

  .max-h-screen {
    max-height: 100dvh !important;
  }
</style>
